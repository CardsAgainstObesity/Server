-- Server ( GameServer ) --
+ error
    * Description: An error occurred
    * Args: Error error
+ RoomConnectionSuccess
    * Description: Connection to room succeed
    * Args: Object roomJSON
+ RoomCreationSuccess
    * Description:
    * Args: Object roomJSON
+ PlayerChangeName
    * Description: Player changed name
+ PlayerDeckUpdated
    * Description: Player deck changed
    * Args: [cards]
+ AnnouncePlayerIsReady
    * Description: Announces to everyone that a player is ready
    * Args: Object playerJSON
+ AnnouncePlayerIsNotReady
    * Description: Announces to everyone that a player is ready
    * Args: Object playerJSON
+ RoomFlipCard
    * Description: The czar fliped a card 
    * Args: String card_id


-- Server/Room --
+ RoomStatusChanged
    * Description: Room status changed
    * Args: String status
+ RoomCzarChanged
    * Description: Room czar changed
    * Args: Object playerJSON
+ RoomPlayerConnection
    * Description: New player connected
    * Args: Object playerJSON
+ RoomPlayerDisconnection
    * Description: A player disconnected
    * Args: Object playerJSON
+ RoomRemoved
    * Description: Room removed
    * Args: Object roomJSON
+ RoomStart
    * Description: The game started
    * Args: Object roomJSON
+ LobbyAddCardpackSuccess
    * Description: Added a cardpack to the lobby
    * Args: {
                id: string;
                author: string;
                name: {
                    es: string;
                    en: string;
                };
            }; 
+ LobbyRemoveCardpackSuccess
    * Description: Removed a cardpack to the lobby
    * Args: String cardpack_id
+ RoomCardsDealed
    * Description: Room has given cards to every player
+ RoomBlackCardChanged
    * Description: Room black card changed 
    * Args: BlackCard bCard
+ RoomStartVoting
    * Description: Room is now in voting status
    * Args: Player's cards with id
+ AnnounceRoomSelectWinner
    * Description: The czar selected a winner for this round
    * Args: Object playerJSON
+ RoomGameFinished
    * Description: The game ended with a winner 
    * Args: Object playerJSON
+ RoomGoBackToLobby 
    * Description: Czar "requested" players to go back to lobby

-- Socket ( client ) --
+ RoomConnectionRequest
    * Description: Requests to join a room
    * Args: String roomId
+ RoomCreationRequest
    * Description: Requests to create a room
    * Args: String roomId
+ RequestPlayerChangeName
    * Description: Request a name change
    * Args: String name
+ LobbyAddCardpackRequest
    * Description: Adds a new cardpack
    * CONDITION: Player id == Room host id
    * Args: {String room_id, String cardpack_id}
+ LobbyRemoveCardpackRequest
    * Description: Removes a selected cardpack
    * CONDITION: Player id == Room host id
    * Args: {String room_id, String cardpack_id}
+ RoomStartRequest
    * Description: Request to start the game
    * CONDITION: Player id == Room host id
    * Args: String room_id
+ PlayerIsReady
    * Description: Player is ready
    * CONDITION: Player has that card in the deck
    * Args: number[] card_id 
+ PlayerIsNotReady
    * Description: Player is not ready
+ RoomStartVotingRequest
    * Description: Request the room to change status to voting
    * CONDITION: Player id == Room czar id
    * Args: String room_id
+ RoomSelectWinnerRequest
    * Description: Czar submits a player selection as winner of the round
    * CONDITION: Player id == Room czar id
    * Args: String player_id
+ RoomGoBackToLobbyRequest
    * Description: When the game ended, the last Czar can send players to lobby
    * CONDITION: Player id == Room czar id
+ RoomFlipCardRequest
    * Description: Czar requests to flip all cards from a player
    * CONDITION: Player id == Room czar id


Error types:
+ UnknownRoom
+ RoomCapacityExceed
+ RoomAlreadyExists
+ CardpackAlreadyAdded
+ InvalidCardpack
+ NotEnoughPlayers
+ NotEnoughCards
+ PlayerDoesntOwnThatCard
+ PlayerNotInARoom
+ PlayersNotReady
+ InvalidEventArgs
+ NoPermissions